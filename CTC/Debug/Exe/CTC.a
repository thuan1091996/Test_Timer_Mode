;/*******************************************************
;This program was created by the
;CodeWizardAVR V3.12 Advanced
;Automatic Program Generator
;© Copyright 1998-2014 Pavel Haiduc, HP InfoTech s.r.l.
;http://www.hpinfotech.com
;
;Project :
;Version :
;Date    : 8/30/2018
;Author  :
;Company :
;Comments:
;
;
;Chip type               : ATmega8
;Program type            : Application
;AVR Core Clock frequency: 8.000000 MHz
;Memory model            : Small
;External RAM size       : 0
;Data Stack size         : 256
;*******************************************************/
;
;#include <mega8.h>
;PCODE: $00000000 VOL: 0
	#ifndef __SLEEP_DEFINED__
;PCODE: $00000001 VOL: 0
	#define __SLEEP_DEFINED__
;PCODE: $00000002 VOL: 0
	.EQU __se_bit=0x80
;PCODE: $00000003 VOL: 0
	.EQU __sm_mask=0x70
;PCODE: $00000004 VOL: 0
	.EQU __sm_powerdown=0x20
;PCODE: $00000005 VOL: 0
	.EQU __sm_powersave=0x30
;PCODE: $00000006 VOL: 0
	.EQU __sm_standby=0x60
;PCODE: $00000007 VOL: 0
	.EQU __sm_ext_standby=0x70
;PCODE: $00000008 VOL: 0
	.EQU __sm_adc_noise_red=0x10
;PCODE: $00000009 VOL: 0
	.SET power_ctrl_reg=mcucr
;PCODE: $0000000A VOL: 0
	#endif
;PCODE: $0000000B VOL: 0
;PCODE: $0000000C VOL: 0
;unsigned long LoadA=0 ;
;unsigned long LoadB=0;
;unsigned long Duty=0;
;// Declare your global variables here
;interrupt [TIM1_CAPT] void timer1_capt_isr(void){
; 0000 001D interrupt [6] void timer1_capt_isr(void){

	.CSEG
;PCODE: $0000000D VOL: 0
;PCODE: $0000000E VOL: 0
; 0000 001E   PORTB ^= (1<<PORTB7);
;PCODE: $0000000F VOL: 0
;PCODE: $00000010 VOL: 0
;PCODE: $00000011 VOL: 0
;PCODE: $00000012 VOL: 0
; 0000 001F 
; 0000 0020 }
;PCODE: $00000013 VOL: 0
;PCODE: $00000014 VOL: 0
;PCODE: $00000015 VOL: 0
;// Timer1 overflow interrupt service routine
;interrupt [TIM1_OVF] void timer1_ovf_isr(void)
; 0000 0023 {
;PCODE: $00000016 VOL: 0
;PCODE: $00000017 VOL: 0
; 0000 0024 PORTB ^= (1<<PORTB7);
;PCODE: $00000018 VOL: 0
;PCODE: $00000019 VOL: 0
;PCODE: $0000001A VOL: 0
;PCODE: $0000001B VOL: 0
; 0000 0025 }
;PCODE: $0000001C VOL: 0
;PCODE: $0000001D VOL: 0
;PCODE: $0000001E VOL: 0
;
;// Timer1 output compare A interrupt service routine
;interrupt [TIM1_COMPA] void timer1_compa_isr(void)
; 0000 0029 {
;PCODE: $0000001F VOL: 0
;PCODE: $00000020 VOL: 0
; 0000 002A   PORTB^=(1<<PORTB6);
;PCODE: $00000021 VOL: 0
;PCODE: $00000022 VOL: 0
;PCODE: $00000023 VOL: 0
;PCODE: $00000024 VOL: 0
; 0000 002B }
;PCODE: $00000025 VOL: 0
;PCODE: $00000026 VOL: 0
;PCODE: $00000027 VOL: 0
;// Timer1 output compare B interrupt service routine
;interrupt [TIM1_COMPB] void timer1_compb_isr(void)
; 0000 002E {
;PCODE: $00000028 VOL: 0
;PCODE: $00000029 VOL: 0
; 0000 002F    PORTB^=(1<<PORTB6);
;PCODE: $0000002A VOL: 0
;PCODE: $0000002B VOL: 0
;PCODE: $0000002C VOL: 0
;PCODE: $0000002D VOL: 0
; 0000 0030 }
;PCODE: $0000002E VOL: 0
;PCODE: $0000002F VOL: 0
;PCODE: $00000030 VOL: 0
;
;void main(void)
; 0000 0033 {
;PCODE: $00000031 VOL: 0
; 0000 0034 long temp;
; 0000 0035 Duty=20;
;PCODE: $00000032 VOL: 0
;	temp -> Y+0
;PCODE: $00000033 VOL: 0
;PCODE: $00000034 VOL: 0
; 0000 0036 temp=Duty*10000/(2*100);     //Warning about overload
;PCODE: $00000035 VOL: 0
;PCODE: $00000036 VOL: 0
;PCODE: $00000037 VOL: 0
;PCODE: $00000038 VOL: 0
;PCODE: $00000039 VOL: 0
;PCODE: $0000003A VOL: 0
;PCODE: $0000003B VOL: 0
; 0000 0037 LoadA=5000-temp;           //61535 center of 1ms, /2 cuz B will do half
;PCODE: $0000003C VOL: 0
;PCODE: $0000003D VOL: 0
;PCODE: $0000003E VOL: 0
;PCODE: $0000003F VOL: 0
; 0000 0038 LoadB=5000+temp;
;PCODE: $00000040 VOL: 0
;PCODE: $00000041 VOL: 0
;PCODE: $00000042 VOL: 0
; 0000 0039 // Declare your local variables here
; 0000 003A 
; 0000 003B // Input/Output Ports initialization
; 0000 003C // Port B initialization
; 0000 003D // Function: Bit7=In Bit6=In Bit5=In Bit4=In Bit3=In Bit2=Out Bit1=Out Bit0=In
; 0000 003E DDRB=(1<<DDB7) | (1<<DDB6) | (1<<DDB5) | (1<<DDB4) | (0<<DDB3) | (1<<DDB2) | (1<<DDB1) | (0<<DDB0);
;PCODE: $00000043 VOL: 0
;PCODE: $00000044 VOL: 0
; 0000 003F // State: Bit7=T Bit6=T Bit5=T Bit4=T Bit3=T Bit2=0 Bit1=0 Bit0=T
; 0000 0040 PORTB=(0<<PORTB7) | (0<<PORTB6) | (0<<PORTB5) | (0<<PORTB4) | (0<<PORTB3) | (0<<PORTB2) | (0<<PORTB1) | (0<<PORTB0);
;PCODE: $00000045 VOL: 0
;PCODE: $00000046 VOL: 0
; 0000 0041 // Timer/Counter 1 initialization
; 0000 0042 // Clock source: System Clock
; 0000 0043 // Clock value: 1000.000 kHz
; 0000 0044 // Mode: CTC top=ICR1
; 0000 0045 // OC1A output: Toggle on compare match
; 0000 0046 // OC1B output: Toggle on compare match
; 0000 0047 // Noise Canceler: Off
; 0000 0048 // Input Capture on Falling Edge
; 0000 0049 // Timer Period: 10 ms
; 0000 004A // Output Pulse(s):
; 0000 004B // OC1A Period: 20 ms Width: 10 ms// OC1B Period: 20 ms Width: 10 ms
; 0000 004C // Timer1 Overflow Interrupt: On
; 0000 004D // Input Capture Interrupt: Off
; 0000 004E // Compare A Match Interrupt: On
; 0000 004F // Compare B Match Interrupt: On
; 0000 0050 TCCR1A=(0<<COM1A1) | (1<<COM1A0) | (0<<COM1B1) | (1<<COM1B0) | (0<<WGM11) | (0<<WGM10);
;PCODE: $00000047 VOL: 0
;PCODE: $00000048 VOL: 0
; 0000 0051 TCCR1B=(0<<ICNC1) | (0<<ICES1) | (1<<WGM13) | (1<<WGM12) | (0<<CS12) | (1<<CS11) | (0<<CS10);
;PCODE: $00000049 VOL: 0
;PCODE: $0000004A VOL: 0
; 0000 0052 TCNT1H=0x00;
;PCODE: $0000004B VOL: 0
;PCODE: $0000004C VOL: 0
; 0000 0053 TCNT1L=0x00;
;PCODE: $0000004D VOL: 0
;PCODE: $0000004E VOL: 0
; 0000 0054 ICR1H=0x27;
;PCODE: $0000004F VOL: 0
;PCODE: $00000050 VOL: 0
; 0000 0055 ICR1L=0x0F;
;PCODE: $00000051 VOL: 0
;PCODE: $00000052 VOL: 0
; 0000 0056 OCR1AH=LoadA>> 8;
;PCODE: $00000053 VOL: 0
;PCODE: $00000054 VOL: 0
;PCODE: $00000055 VOL: 0
;PCODE: $00000056 VOL: 0
; 0000 0057 OCR1AL=LoadA& 0xff;
;PCODE: $00000057 VOL: 0
;PCODE: $00000058 VOL: 0
;PCODE: $00000059 VOL: 0
; 0000 0058 OCR1BH=LoadB>> 8;
;PCODE: $0000005A VOL: 0
;PCODE: $0000005B VOL: 0
;PCODE: $0000005C VOL: 0
;PCODE: $0000005D VOL: 0
; 0000 0059 OCR1BL=LoadB& 0xff;
;PCODE: $0000005E VOL: 0
;PCODE: $0000005F VOL: 0
;PCODE: $00000060 VOL: 0
; 0000 005A // Timer(s)/Counter(s) Interrupt(s) initialization
; 0000 005B TIMSK=(0<<OCIE2) | (0<<TOIE2) | (1<<TICIE1) | (1<<OCIE1A) | (1<<OCIE1B) | (1<<TOIE1) | (0<<TOIE0);
;PCODE: $00000061 VOL: 0
;PCODE: $00000062 VOL: 0
; 0000 005C 
; 0000 005D // Global enable interrupts
; 0000 005E #asm("sei")
;PCODE: $00000063 VOL: 0
	sei
;PCODE: $00000064 VOL: 0
; 0000 005F 
; 0000 0060 while (1)
;PCODE: $00000065 VOL: 0
; 0000 0061       {
; 0000 0062 
; 0000 0063       }
;PCODE: $00000066 VOL: 0
;PCODE: $00000067 VOL: 0
; 0000 0064 }
;PCODE: $00000068 VOL: 0
;PCODE: $00000069 VOL: 0
;PCODE: $0000006A VOL: 0
;PCODE: $0000006B VOL: 0
